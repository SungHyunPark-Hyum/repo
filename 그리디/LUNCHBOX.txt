//LUNCHBOX

#include<iostream>
#include<queue>
using namespace std;

int N;
int H[10001];
int E[10001];

typedef struct _node
{
	int h;
	int e;
}Node;

bool operator<(Node n1, Node n2)
{
	return n1.e < n2.e;
}

int big(int x, int y)
{
	if (x > y)
		return x;
	else
		return y;
}
int main()
{
	priority_queue<Node> pq;
	int t_num;
	cin >> t_num;
	int small;
	for (int u = 0; u < t_num; u++)
	{
		small = 0;
		int ans = 0;
		cin >> N;
		for (int i = 1; i <= N; i++)
		{
			cin >> H[i];
			ans += H[i];
		}
		for (int i = 1; i <= N; i++)
		{
			cin >> E[i];
			pq.push({ H[i], E[i] });
		}
		int temp;
		int all = ans;
		while (!pq.empty())
		{
			all -= pq.top().h;
			temp = pq.top().e - all;
			if (temp > 0)
				small = big(small, temp);
			pq.pop();
		}
		cout << ans + small << endl;
	}
}