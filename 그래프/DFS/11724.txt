//11724

#include<iostream>
#include<vector>
using namespace std;

int V, E;
vector<vector<int>> v;
vector<bool> visit;
int ans = 0;

void dfs(int here)
{
	visit[here] = true;
	int there;
	for (int i = 0; i < v[here].size(); ++i)
	{
		there = v[here][i];
		if (!visit[there])
			dfs(there);
	}
}

void dfsAll()
{
	for (int i = 1; i <= V; i++)
		if (!visit[i])
		{
			dfs(i);
			++ans;
		}
}

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> V >> E;
	v = vector<vector<int>>(V + 1);
	visit = vector<bool>(V + 1, false);
	int x, y;
	for (int i = 0; i < E; i++)
	{
		cin >> x >> y;
		v[x].push_back(y); v[y].push_back(x);
	}
	dfsAll();
	cout << ans << endl;
}