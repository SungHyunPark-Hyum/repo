//10973

#include<iostream>
#include<vector>
#include<queue>
using namespace std;

int N;
vector<int> arr;

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> N;
	arr = vector<int>(N);
	for (int i = 0; i < N; i++)
		cin >> arr[i];
	int flag = true;

	int min = arr[N - 1];
	for (int i = N - 2; i >= 0; i--)
	{
		if (min > arr[i])
			min = arr[i];
		else
		{
			flag = false;
			priority_queue<int> pq;
			int temp = arr[i];
			int flag2 = true;
			for (int j = i; j < N; j++)
				pq.push(arr[j]);
			int idx = i+1; int x;
			while (!pq.empty())
			{
				if (flag2)
				{
					x = pq.top(); pq.pop();
					if (temp == x)
						flag2 = false;
					arr[idx++] = x;
				}
				else
				{
					flag2 = true;
					arr[i] = pq.top(); pq.pop();
				}
			}
			break;
		}
	}

	if (flag)
		cout << -1 << endl;
	else
		for (int i = 0; i < N; i++)
			cout << arr[i] << " ";
}