//BOARDCOVER

#include<iostream>
using namespace std;

int** arr;
int state;
int finish;
int x, y;
int vec[4][3][2] =
{
{{1,0},{0,0},{0,1}},           //1
{{0,1},{0,0},{1,1}},     //2
{{1,0},{0,0},{1,1}},           //3
{{1,0},{0,0},{1,-1}}               //4
};

int set(int a, int b, int type, int flag)
{
	if (flag == -1)
	{
		for(int i = 0; i<3; i++)
			arr[vec[type][i][0] + a][vec[type][i][1] + b] = 1;
		return 1;
	}
	else
	{
		int a1 = vec[type][0][0]+a; int b1 = vec[type][0][1]+b;
		int a2 = vec[type][2][0]+a; int b2 = vec[type][2][1]+b;
		if (a1 < 0 || a2 < 0 || b1 < 0 || b2 < 0)
			return 0;
		if (a1 >= x || a2 >= x || b1 >= y || b2 >= y)
			return 0;
		if (arr[a1][b1] == 0 || arr[a2][b2] == 0)
			return 0;

		arr[a][b] = 0;
		arr[a1][b1] = 0;
		arr[a2][b2] = 0;
		return 1;
	}
}


int find()
{
	int ret = 0;
	int a = -1, b = -1;
	for (int i = 0; i < x; i++)
	{
		for (int j = 0; j < y; j++)
			if (arr[i][j] == 1)
			{
				a = i; b = j;
				break;
			}
		if (a != -1)
			break;
	}
	if (a == -1)
		return 1;
	for (int i = 0; i < 4; i++)
	{
		if (set(a, b, i, 1))
		{
			ret += find();
			set(a, b, i, -1);
		}
	}

	return ret;
}

int main()
{
	int t_num;
	cin >> t_num;

	char c;
	int answer;
	for (int i = 0; i < t_num; i++)
	{
		state = 0;
		cin >> x >> y;
		finish = x * y;
		arr = (int**)malloc(sizeof(int*) * x);
		for (int i = 0; i < x; i++)
			arr[i] = (int*)malloc(sizeof(int) * y);

		for(int i = 0; i<x; i++)
			for (int j = 0; j < y; j++) // °ËÀºÄ­ 0 ÈòÄ­ 1
			{
				cin >> c;
				if (c == '#')
				{
					arr[i][j] = 0; state++;
				}
				else
					arr[i][j] = 1;
			}

		if ((finish - state) % 3 != 0)
			answer = 0;
		else
			answer = find();
		cout << answer << endl;

	}
}