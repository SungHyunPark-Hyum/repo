//14002

#include<iostream>
#include<vector>
using namespace std;

int N;
int arr[1001];
int dp[1001][1001];
int has[1001];

int big(int x, int y)
{
	if (x > y)
		return x;
	else
		return y;
}
int find(int idx, int last)
{
	if (idx == N+1)
		return 0;

	int& ret = dp[idx][last];
	if (ret != -1)
		return ret;
	ret = find(idx + 1, last);
	if (arr[idx] > last)
		ret = big(ret, find(idx + 1, arr[idx])+1);
	return ret;
}


int main()
{
	cin >> N;
	arr[0] = 0;
	for (int i = 1; i <= N; i++)
	{
		cin >> arr[i];
		has[i] = 0;
		for (int j = 0; j < 1001; j++)
			dp[i][j] = -1;
	}
	
	int ans = find(1, 0);

	cout << ans << endl;
	int last = 0;
	for (int i = 2; i <= N; i++)
	{
		if (dp[i][arr[i - 1]] == ans - 1)
		{
			has[i - 1] = 1;
			last = arr[i - 1];
			ans--;
		}
	}
	if(ans)
		has[N] = 1;

	for (int i = 1; i <= N; i++)
		if (has[i])
			cout << arr[i] << " ";
}