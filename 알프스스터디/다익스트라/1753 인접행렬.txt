//1753

#include<iostream>
#include<stack>
#include<queue>
using namespace std;

#define INF 200000

int V, E, start;
int** arr;
int* ans;

typedef struct _node
{
	int key;
	int v;
}Node;

struct cmp
{
	bool operator()(Node n1, Node n2)
	{
		return n1.key > n2.key;
	}
};
void dij()
{
	priority_queue<Node, vector<Node>, cmp> pq;
	stack<Node> stack;
	int idx = start - 1;
	ans[idx] = 0;
	for (int i = 0; i < V; i++)
	{
		if (i != idx)
		{
			Node n;
			n.v = i;
			n.key = arr[idx][i];
			pq.push(n);
		}
	}
	int temp;
	for (int i = 1; i < V; i++)
	{
		Node n = pq.top();
		pq.pop();
		idx = n.v;
		ans[idx] = temp = n.key;
		while (!pq.empty())
		{
			Node n1 = pq.top();
			pq.pop();
			if (temp + arr[idx][n1.v] < n1.key)
				n1.key = temp + arr[idx][n1.v];
			stack.push(n1);
		}
		while (!stack.empty())
		{
			pq.push(stack.top());
			stack.pop();
		}
	}
}

int min(int x, int y)
{
	if (x > y)
		return y;
	else
		return x;
}

int main()
{
	cin >> V >> E >> start;
	arr = (int**)malloc(sizeof(int*) * V);
	for (int i = 0; i < V; i++)
		arr[i] = (int*)malloc(sizeof(int) * V);

	for (int i = 0; i < V; i++)
		for (int j = 0; j < V; j++)
			arr[i][j] = INF;

	int x, y, w;
	for (int i = 0; i < E; i++)
	{
		cin >> x >> y >> w;
		arr[x - 1][y - 1] = min(arr[x - 1][y - 1], w);
	}
	
	ans = (int*)malloc(sizeof(int) * V);
	
	dij();

	for (int i = 0; i < V; i++)
		if (ans[i] == INF)
			cout << "INF" << endl;
		else
			cout << ans[i] << endl;
}