//POLY

#include<iostream>
using namespace std;

#define MOD 10000000

int N;

int dp[101][101];

int find(int num, int rest)
{
	if (rest == 0)
		return 1;

	int& ret = dp[num][rest];
	if (ret != -1)
		return ret;
	ret = 0;
	int temp = 0;
	for (int i = 1; i <= rest; i++)
	{
		ret += (temp + num) * find(i, rest - i) % MOD;
		temp++;
		ret = ret % MOD;
	}

	return ret;
}

int main()
{
	int t_num;
	cin >> t_num;
	for (int u = 0; u < t_num; u++)
	{
		cin >> N;
		for (int i = 1; i < 101; i++)
			for (int j = 1; j < 101; j++)
				dp[i][j] = -1;
		int ans = 0;
		for (int i = 1; i <= N; i++)
		{
			ans += find(i, N - i);
			ans = ans % MOD;
		}
		cout << ans << endl;
	}
}