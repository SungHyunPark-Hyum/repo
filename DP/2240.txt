//2249

#include<iostream>
using namespace std;

int T, W;
bool arr[1000];
int dp[1000][31][2]; 

int big(int x, int y)
{
	if (x > y) return x;
	else return y;
}

int find(int idx, int w, bool tree)
{
	if (idx == T)
		return 0;

	int& ret = dp[idx][w][tree];
	if (ret != -1)
		return ret;
	ret = 0;
	if (w == 0)
		ret += find(idx + 1, 0, tree);
	else
		ret += big(find(idx + 1, w, tree), find(idx + 1, w - 1, !tree));
	
	if (tree == arr[idx])
		ret++;
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> T >> W;
	int a;
	for (int i = 0; i < T; i++)
	{
		cin >> a;
		if (a == 1)
			arr[i] = false;
		else
			arr[i] = true;

		for (int j = 0; j <= W; j++)
			dp[i][j][0] = dp[i][j][1] = -1;
	}
	int ans = find(0, W - 1, true);
	ans = big(ans, find(0, W, false));
	cout << ans << endl;
}